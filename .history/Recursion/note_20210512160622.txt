Recursion
_________
= a way of solving a problem by having a function calling itself.
- performimg the same operation multiple times with different inputs
-In every step we try smaller inputs to make the problem smaller.
-Base condition is need to stop the recursion, otherwise infinite loop will 
occur

why?
____
- helps you break down big problems into smaller ones and easier to use.
when to choose Recursion.
_________________________
=>if you can divine the problem into similar sub problem
=>Design an algorithm to compute nth
=>Write code to list the n..
=> Implement a method to compute all.
===> practice

- The prominent usage of Recursion in data struture like trees and graphs
- Interviews
- It is used in many algorithms (divide and conquer, greedy and dynamic programming)

How Recursion works? 

1. A methods call it self
2. Exit from infinite loop

stack memory is used to story recursive call

Recursion v/s iterative solution 
- Recursuion use more memory since it creare a new stack

When to use/ Avoide Recursion
-When the problem can be similar subproblem
-When we are fine with extra overhead.
-quick working solution instead of efficient ones
- When traverse a tree.
- When we use memoization in Recursion.

How to write Recursion in 3 step?
________________________________

Factorial
_________
4! = 4*3*2*1 = 24

Step 1 : Recursion case -the flow

Step 2 : now when to stop

Step 3 : unintentional case 

5 simple step for solve any recurve problem.
____________________________________________

1. What's the simplest possible input?
2. Play around with example and visualize
3. Relate hard cases to simpler cases
4.Generalize the pattern
5.Write code by combining recursive pattern with the base case.